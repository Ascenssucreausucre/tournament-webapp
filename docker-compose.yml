version: "3.8"

services:
  frontend:
    build: ./front
    container_name: uwufufu_frontend
    ports:
      - "${FRONT_PORT}:3000"
    volumes:
      - ./front:/app
    command: npm run dev
    env_file: .env
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - backend

  backend:
    build: ./back
    container_name: uwufufu_backend
    ports:
      - "${API_PORT}:4000"
    volumes:
      - ./back:/app
      - ./back/uploads:/app/uploads
    command: npm run dev
    env_file: .env
    environment:
      - DB_HOST=db
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_PORT=5432
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db

  dashboard:
    build: ./dashboard
    container_name: uwufufu_dashboard
    ports:
      - "${DASHBOARD_PORT}:5173"
    volumes:
      - ./dashboard:/app
    command: npm run dev
    env_file: .env
    environment:
      - VITE_API_URL=${VITE_API_URL}

  db:
    image: postgres:16
    container_name: uwufufu_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data

  nginx:
    image: nginx:stable
    container_name: uwufufu_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./back/uploads:/var/www/uwufufu/uploads
    depends_on:
      - frontend
      - backend
      - dashboard

volumes:
  db_data:
